gc()
gc()
library(doMC)
registerDoMC(cores = 1)
gc()
registerDoMC(cores = NULL)
install.packages(c("AICcmodavg", "deSolve", "Ecfun", "evtree", "highr", "knitr", "mboost", "mime", "minqa", "pcaPP", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "rjags", "rjson", "rmarkdown", "RSQLite", "tis"))
install.packages(c("boot", "class", "cluster", "codetools", "KernSmooth", "MASS", "mgcv", "nlme"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
rm(list=ls(all=TRUE));gc(reset=TRUE);par(mfrow=c(1,1))
contributors()
gc()
gui.classify()
require(stylo)
gui.classify()
gui.oppose()
1906561661/log(901)
convert_to_chardate <- function(arrive_int) {
char_date <- format(reference_time + arrive_int * 60, format = '%Y %m %d %H %M', tz = 'UTC')
return(char_date)
}
reference_time <- as.POSIXct('2014 1 1 0 0', '%Y %m %d %H %M', tz = 'UTC')
convert_to_chardate(280232261)
install.packages("Rmpi")
install.packages(c("cluster", "KernSmooth", "mgcv"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
gc()
gc()
setwd('/Users/ivan/Work_directory/FICO/Helping-Santas-Helpers/')
#setwd('C:/Users/Ivan.Liuyanfeng/Desktop/Data_Mining_Work_Space/FICO/Helping-Santas-Helpers')
#setwd('H:/Machine_Learning/FICO/Helping-Santas-Helpers')
gc(); rm(list=ls()); source('R code/Functions.R');
load('data/myToys.RData')
require(Rcpp)
sourceCpp('Latest Stable Models/modelling/main_elf.cpp')
NUM_ELVES <- 900
myelves <- create_elves(NUM_ELVES)
myelves_rate <- myelves[,'current_rating']
### Change ###
toys <- data.matrix(toys)
toys <- toys[order(toys[,4], toys[,3]),]
toys <- data.matrix(toys)
toys <- toys[order(toys[,4], toys[,3]),]
setwd('/Users/ivan/Work_directory/FICO/Helping-Santas-Helpers/')
#setwd('C:/Users/Ivan.Liuyanfeng/Desktop/Data_Mining_Work_Space/FICO/Helping-Santas-Helpers')
#setwd('H:/Machine_Learning/FICO/Helping-Santas-Helpers')
gc(); rm(list=ls()); source('R code/Functions.R');
load('data/toys.RData')
require(Rcpp)
sourceCpp('Latest Stable Models/modelling/main_elf.cpp')
NUM_ELVES <- 900
myelves <- create_elves(NUM_ELVES)
myelves_rate <- myelves[,'current_rating']
### Change ###
toys <- data.matrix(toys)
toys <- toys[order(toys[,4], toys[,3]),]
load('data/toys.RData')
require(Rcpp)
sourceCpp('Latest Stable Models/modelling/main_elf.cpp')
NUM_ELVES <- 900
myelves <- create_elves(NUM_ELVES)
myelves_rate <- myelves[,'current_rating']
toys <- data.matrix(toys)
toys <- toys[order(toys[,4], toys[,3]),]
head(toys)
toys <- toys[order(toys[,3], toys[,2]),]
gc()
submissions <- solution_Elf(toys, myelves,myelves_rate)
(submissions[which.max(submissions[,3]),3]+submissions[which.max(submissions[,3]), 4])*log(901)
system.time(submissions <- solution_Elf(toys, myelves,myelves_rate))
